server.name=https://localhost:8443
server.prefix=${server.name}/cas
cas.securityContext.serviceProperties.service=${server.prefix}/services/j_acegi_cas_security_check
# Names of roles allowed to access the CAS service manager
cas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN
cas.securityContext.casProcessingFilterEntryPoint.loginUrl=${server.prefix}/login
cas.securityContext.ticketValidator.casServerUrlPrefix=${server.prefix}
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
# IPv6 version
cas.securityContext.status.allowedSubnet=0:0:0:0:0:0:0:1

# IPv4 version
#cas.securityContext.status.allowedSubnet=127.0.0.1


cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

host.name=cas.example.org

## Log4J
log4j.config.location=/etc/cas/log4j.xml
log4j.refresh.interval=60000

database.hibernate.dialect=org.hibernate.dialect.HSQLDialect

##
# Service Ticket Timeout
# Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# Service Ticket timeout - typically kept short as a control against replay attacks, default is 10s.  You'll want to
# increase this timeout if you are manually testing service ticket creation/validation via tamperdata or similar tools

# Set to 3 min here for easy testing/demonstrating new features.
st.timeToKillInSeconds=180

##
# Single Logout Out Callbacks
# Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
#
# To turn off all back channel SLO requests set slo.disabled to true
slo.callbacks.disabled=true

services.registry.config.location=file:/etc/cas/servicesRegistry.conf
service.registry.reload.interval=500

person.attributes.config.location=file:/etc/cas/person-attributes.conf
person.attributes.reload.interval=500

##
# Multifactor Authentication
#
# Define the attribute name whose value should be used
# to greet the user on the additional login prompts
#
# screen.mfa.greeting.userAttribute=firstName

##
# The principal attribute name to determine MFA authn flow
#
# mfa.method.userAttribute=authn_method

#Duo security 2fa authentication provider
duo.api.host=
duo.integration.key=
duo.secret.key=
duo.application.key=
