<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cas="http://unicon.net/schema/cas"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://unicon.net/schema/cas http://unicon.net/schema/cas/cas-addons.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">



    <context:component-scan base-package="net.unicon.cas.mfa" />
    <context:annotation-config />

    <aop:aspectj-autoproxy/>

    <cas:default-authentication-support/>

    <webflow:flow-registry id="flowRegistry" flow-builder-services="builder" base-path="/WEB-INF/subflows">
        <webflow:flow-location-pattern value="**/*-webflow.xml"/>
    </webflow:flow-registry>

    <bean id="abstractValidateController" class="net.unicon.cas.mfa.web.MultiFactorServiceValidateController"
          abstract="true"
          p:centralAuthenticationService-ref="mfaAwareCentralAuthenticationService"
          p:proxyHandler-ref="proxy20Handler"
          p:argumentExtractor-ref="casArgumentExtractor"/>

    <bean id="proxyValidateController" parent="abstractValidateController"
          p:validationSpecificationClass="net.unicon.cas.mfa.AbstractMultiFactorAuthenticationProtocolValidationSpecification.WithProxy"/>

    <bean id="serviceValidateController" parent="abstractValidateController"
          p:validationSpecificationClass="net.unicon.cas.mfa.AbstractMultiFactorAuthenticationProtocolValidationSpecification.WithoutProxy"/>

    <bean id="samlValidateController" parent="serviceValidateController"
          p:argumentExtractor-ref="samlArgumentExtractor"
          p:successView="casSamlServiceSuccessView"
          p:failureView="casSamlServiceFailureView"/>

    <bean id="validateInitialMfaRequestAction"
          class="net.unicon.cas.mfa.web.flow.ValidateInitialMultiFactorAuthenticationRequestAction"
          c:authSupport-ref="authenticationSupport"
          c:authenticationMethodRankingStrategy-ref="authenticationMethodRankingStrategy"/>

    <!-- Generate and chain multifactor credentials based on current authenticated credentials. -->
    <bean id="generateMfaCredentialsAction" class="net.unicon.cas.mfa.web.flow.GenerateMultiFactorCredentialsAction"
          p:authenticationSupport-ref="authenticationSupport"/>

    <!--  CAS instance responsible for creating the final authenticated principal. -->
    <bean id="mfaAwareCentralAuthenticationService"
          class="net.unicon.cas.mfa.MultiFactorAwareCentralAuthenticationService"
          p:ticketRegistry-ref="ticketRegistry"
          p:ticketGrantingTicketExpirationPolicy-ref="grantingTicketExpirationPolicy"
          p:ticketGrantingTicketUniqueTicketIdGenerator-ref="ticketGrantingTicketUniqueIdGenerator"
          p:centralAuthenticationServiceDelegate-ref="centralAuthenticationService"
          p:servicesManager-ref="servicesManager"
          p:authenticationMethodAttributeName="${mfa.method.userAttribute:authn_method}"
          p:persistentIdGenerator-ref="persistentIdGenerator"
          p:authenticationManager-ref="mfaAuthenticationManager"/>

    <bean id="mfaAuthenticationManager" parent="authenticationManager"
        p:authenticationMetaDataPopulators-ref="listOfMfaAuthenticationMetadataPopulators"/>

    <util:list id="listOfMfaAuthenticationMetadataPopulators">
        <bean class="net.unicon.cas.mfa.authentication.RememberAuthenticationMethodMetaDataPopulator"/>
    </util:list>

    <bean id="principalAttributeMfaRequestResolver"
          class="net.unicon.cas.mfa.authentication.principal.PrincipalAttributeMultiFactorAuthenticationRequestResolver"
          c:authenticationMethodAttributeName="${mfa.method.userAttribute:authn_method}"
          c:mfaServiceFactory-ref="mfaServiceFactory"
          c:authenticationMethodConfiguration-ref="authenticationMethodsConfig"/>

    <bean id="authenticationMethodRankingStrategy" class="net.unicon.cas.mfa.authentication.OrderedMultiFactorMethodRankingStrategy"
          c:authenticationMethodConfiguration-ref="authenticationMethodsConfig"/>

    <bean id="mfaLocationResolver" class="net.unicon.cas.mfa.authentication.loc.IpInfoDbAuthenticationLocationResolver"
          c:apiKey="${ipinfodb.api.key}" />

    <bean id="authenticationRegistry" class="net.unicon.cas.mfa.authentication.loc.DefaultAuthenticationRegistry" />

    <bean id="mfaTrustStrategy" class="net.unicon.cas.mfa.authentication.loc.LocationBasedMultiFactorAuthenticationTrustStrategy"
          c:locationResolver-ref="mfaLocationResolver"
          c:registry-ref="authenticationRegistry" />

    <bean id="abstractAuthenticationViaFormAction" abstract="true"
          class="net.unicon.cas.mfa.web.flow.AbstractMultiFactorAuthenticationViaFormAction"
          p:centralAuthenticationService-ref="mfaAwareCentralAuthenticationService"
          p:multiFactorAuthenticationManager-ref="mfaAuthenticationManager"
          c:authenticationMethodRankingStrategy-ref="authenticationMethodRankingStrategy"
          c:authenticationMethodVerifier-ref="authenticationMethodVerifier"
          c:hostname="${server.prefix}"
          c:authenticationSupport-ref="authenticationSupport"
          c:multiFactorAuthenticationRequestResolver-ref="principalAttributeMfaRequestResolver"
          p:authenticationTrustStrategy-ref="mfaTrustStrategy"  />

    <!--
      Initiating the the multifactor authentication sequence. Validates credentials and
      resolve principal, or authenticate and proceed to the second factor authentication flow.
    -->
    <bean id="initiatingAuthenticationViaFormAction" parent="abstractAuthenticationViaFormAction"
          class="net.unicon.cas.mfa.web.flow.InitiatingMultiFactorAuthenticationViaFormAction"
          c:wrapperAuthenticationAction-ref="authenticationViaFormAction"
          p:warnCookieGenerator-ref="warnCookieGenerator"
          p:destroyPreviousSingleSignOnSession="${mfa.destroy.prev.sso:true}"  />

    <bean id="principalMismatchExceptionHandler"
          class="net.unicon.cas.mfa.web.flow.ConfigurableSpringWebflowExceptionHandler"
          c:exceptionClass="net.unicon.cas.mfa.authentication.principal.UnknownPrincipalMatchException"
          c:state="unknownPrincipalError"/>

    <bean id="mfaLoginViewPrincipalGreeter"
          class="net.unicon.cas.mfa.web.flow.view.MultifactorLoginViewPrincipalAttributeGreeter"
          c:greetingAttrName="${screen.mfa.greeting.userAttribute:cn}"/>

    <bean id="removeHostnameServiceInContextAction"
              class="net.unicon.cas.mfa.web.flow.RemoveHostnameInContextAction"
              c:hostname="${server.prefix}" />

    <!-- MFA Views -->

    <bean id="casMfaUnrecognizedAuthnMethodErrorView" class="org.springframework.web.servlet.view.JstlView"
          p:url="/WEB-INF/view/jsp/default/ui/casMfaUnrecognizedAuthnMethodErrorView.jsp" />

    <bean id="casUnknownPrincipalErrorView" class="org.springframework.web.servlet.view.JstlView"
          p:url="/WEB-INF/view/jsp/default/ui/casUnknownPrincipalErrorView.jsp" />

</beans>
