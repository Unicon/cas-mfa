// Generated by delombok at Mon Mar 10 08:01:35 CST 2014
package com.toopher.integrations.cas;

import com.toopher.api.ToopherIframe;
import com.toopher.integrations.cas.authentication.principal.UsernameToEmailMapper;
import org.apache.log4j.Logger;
import org.jasig.cas.authentication.principal.Principal;

public final class ToopherCAS {

    private Logger logger = Logger.getLogger(ToopherCAS.class);

    private ToopherConfig toopherConfig;

    private UsernameToEmailMapper usernameToEmailMapper;

    private int iframeTtl = 60;

    private boolean automationAllowed = false;
    private boolean challengeRequired = false;


    public ToopherCAS(final ToopherConfig toopherConfig, final UsernameToEmailMapper usernameToEmailMapper) {
        this.toopherConfig = toopherConfig;
        this.usernameToEmailMapper = usernameToEmailMapper;
    }

    public String pairIframeUrl(final Principal principal) {
        final String url =  ToopherIframe.pairIframeUrl(principal.getId(), getEmailForUsername(principal),
                iframeTtl, toopherConfig.getApiUrl(), toopherConfig.getConsumerKey(), toopherConfig.getConsumerSecret());
        return url;
    }

    public String authIframeUrl(final Principal principal, final String loginTicketId) {
        final String url = ToopherIframe.authIframeUrl(principal.getId(), getEmailForUsername(principal), "Log In",
                false, false,
                loginTicketId, "metadata", iframeTtl, toopherConfig.getApiUrl(),
                toopherConfig.getConsumerKey(), toopherConfig.getConsumerSecret());
        return url;
    }

    private String getEmailForUsername(final Principal principal) {
        return usernameToEmailMapper.getEmailForUsername(principal);
    }

    public ToopherConfig getToopherConfig() {
        return this.toopherConfig;
    }

    public UsernameToEmailMapper getUsernameToEmailMapper() {
        return this.usernameToEmailMapper;
    }

    public int getIframeTtl() {
        return this.iframeTtl;
    }

    public void setIframeTtl(final int iframeTtl) {
        this.iframeTtl = iframeTtl;
    }

    public boolean isAutomationAllowed() {
        return automationAllowed;
    }

    public void setAutomationAllowed(final boolean automationAllowed) {
        this.automationAllowed = automationAllowed;
    }

    public boolean isChallengeRequired() {
        return challengeRequired;
    }

    public void setChallengeRequired(final boolean challengeRequired) {
        this.challengeRequired = challengeRequired;
    }
}
