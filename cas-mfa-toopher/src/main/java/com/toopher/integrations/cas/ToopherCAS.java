// Generated by delombok at Mon Mar 10 08:01:35 CST 2014
package com.toopher.integrations.cas;

import com.toopher.api.ToopherIframe;
import com.toopher.integrations.cas.authentication.principal.UsernameToEmailMapper;
import org.apache.log4j.Logger;

public class ToopherCAS {

    private Logger logger = Logger.getLogger(ToopherCAS.class);
    private ToopherConfig toopherConfig;
    private UsernameToEmailMapper usernameToEmailMapper;
    private int iframeTtl = 60;

    public String authIframeUrl(String username, String loginTicketId) {
        return ToopherIframe.authIframeUrl(username, getEmailForUsername(username), "Log In",
                true, true,
                loginTicketId, "metadata", iframeTtl, toopherConfig.getApiUrl(),
                toopherConfig.getConsumerKey(), toopherConfig.getConsumerSecret());
    }

    private String getEmailForUsername(String username) {
        if (usernameToEmailMapper != null) {
            return usernameToEmailMapper.getEmailForUsername(username);
        } else {
            // default - use username for reset email field.  Obviously this will only work
            // if users login using their email addresses
            return username;
        }
    }

    @java.lang.SuppressWarnings("all")
    public ToopherConfig getToopherConfig() {
        return this.toopherConfig;
    }

    @java.lang.SuppressWarnings("all")
    public void setToopherConfig(final ToopherConfig toopherConfig) {
        this.toopherConfig = toopherConfig;
    }

    @java.lang.SuppressWarnings("all")
    public UsernameToEmailMapper getUsernameToEmailMapper() {
        return this.usernameToEmailMapper;
    }

    @java.lang.SuppressWarnings("all")
    public void setUsernameToEmailMapper(final UsernameToEmailMapper usernameToEmailMapper) {
        this.usernameToEmailMapper = usernameToEmailMapper;
    }

    @java.lang.SuppressWarnings("all")
    public int getIframeTtl() {
        return this.iframeTtl;
    }

    @java.lang.SuppressWarnings("all")
    public void setIframeTtl(final int iframeTtl) {
        this.iframeTtl = iframeTtl;
    }
}
